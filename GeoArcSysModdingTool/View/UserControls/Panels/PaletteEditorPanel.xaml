<UserControl x:Class="GeoArcSysModdingTool.View.UserControls.Panels.PaletteEditorPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:cc="clr-namespace:GeoArcSysModdingTool.View.CustomControls"
             xmlns:panels="clr-namespace:GeoArcSysModdingTool.View.UserControls.Panels"
             xmlns:viewModel="clr-namespace:GeoArcSysModdingTool.ViewModel"
             xmlns:conv="clr-namespace:GeoArcSysModdingTool.Converters"
             mc:Ignorable="d"
             Focusable="True"
             FocusVisualStyle="{x:Null}"
             d:DesignHeight="600" d:DesignWidth="800">

    <FrameworkElement.DataContext>
        <viewModel:PaletteEditorViewModel />
    </FrameworkElement.DataContext>

    <Grid>
        <Grid.Resources>
            <ContextMenu x:Key="DirItemContextMenu" ItemsSource="{Binding MenuItems}">
                <ContextMenu.ItemContainerStyle>
                    <Style TargetType="MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
                        <Setter Property="Padding" Value="12,0,12,0" />
                        <Setter Property="Header" Value="{Binding Header}" />
                        <Setter Property="Command" Value="{Binding Command}" />
                        <Setter Property="CommandParameter"
                                Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu, Mode=FindAncestor}}" />
                    </Style>
                </ContextMenu.ItemContainerStyle>
            </ContextMenu>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3" />
            <ColumnDefinition Width="160" />
            <ColumnDefinition Width="3" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="3" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <panels:TreeViewExplorer Grid.Row="0"
                                     x:Name="TreeViewExplorer"
                                     UseCheckBox="True"
                                     UseVirtualization="True"
                                     RootDirItems="{Binding RootDirItems}"
                                     ExpandCollapseCommand="{Binding ExpandCollapseCommand}"
                                     ToggleDirectoryItemCommand="{Binding ToggleDirectoryItemCommand}" />
            <Grid Grid.Row="1" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                        Content="Open"
                        Command="{Binding OpenDirectoryItemCommand}"
                        Style="{StaticResource MaterialDesignFlatButton}" />
                <Button Grid.Column="2"
                        Content="Remove"
                        Command="{Binding RemoveDirectoryItemCommand}"
                        CommandParameter="{Binding ElementName=TreeViewExplorer, Path=SelectedItem}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                            <Style.Triggers>
                                <Trigger Property="CommandParameter" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>

        <GridSplitter Grid.Column="2"
                      Width="3"
                      HorizontalAlignment="Stretch"
                      Focusable="false" />
        <Grid Grid.Column="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid x:Name="ImageGridView"
                  Grid.Row="0"
                  ClipToBounds="True"
                  Background="{Binding BackgroundColor}">
                <Viewbox x:Name="ViewBox"
                         Stretch="Uniform">
                    <ItemsControl ItemsSource="{Binding PreviewImages}" x:Name="PreviewImageItemsControl">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="{x:Type ContentPresenter}">
                                <Setter Property="Panel.ZIndex" Value="{Binding Zindex}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <cc:ZoomBorder Zoom="0.05" Scale="0.1" MouseDown="ZoomBorder_MouseDown">
                                    <Border VerticalAlignment="Top">
                                        <Image
                                            Name="PreviewImage"
                                            Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}"
                                            Width="{Binding ImageWidth}"
                                            Height="{Binding ImageHeight}"
                                            Focusable="True"
                                            FocusVisualStyle="{x:Null}"
                                            VerticalAlignment="Top"
                                            HorizontalAlignment="Left"
                                            RenderOptions.BitmapScalingMode="NearestNeighbor"
                                            RenderOptions.EdgeMode="Aliased"
                                            Source="{Binding Source}">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding FlippedX}" Value="True">
                                                            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                                            <Setter Property="RenderTransform">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleX="-1" />
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding FlippedY}" Value="True">
                                                            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                                            <Setter Property="RenderTransform">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleY="-1" />
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding FlippedX}" Value="True" />
                                                                <Condition Binding="{Binding FlippedY}" Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="RenderTransformOrigin"
                                                                        Value="0.5,0.5" />
                                                                <Setter Property="RenderTransform">
                                                                    <Setter.Value>
                                                                        <ScaleTransform ScaleX="-1" ScaleY="-1" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                            <Image.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Hide"
                                                              Command="{Binding PlacementTarget.Tag.RemoveImageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                              CommandParameter="{Binding }" />
                                                    <MenuItem Header="Flip">
                                                        <MenuItem Header="Horizontal"
                                                                  Click="FlipHorizontalMenuItem_Click" />
                                                        <MenuItem Header="Vertical"
                                                                  Click="FlipVerticalMenuItem_Click" />
                                                    </MenuItem>
                                                    <MenuItem Header="Move">
                                                        <MenuItem Header="Forward"
                                                                  Command="{Binding PlacementTarget.Tag.MovePreviewImageForwardCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                                  CommandParameter="{Binding }" />
                                                        <MenuItem Header="Backward"
                                                                  Command="{Binding PlacementTarget.Tag.MovePreviewImageBackwardCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                                  CommandParameter="{Binding }" />
                                                    </MenuItem>
                                                    <MenuItem Header="Bring To">
                                                        <MenuItem Header="Front"
                                                                  Command="{Binding PlacementTarget.Tag.BringPreviewImageFrontCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                                  CommandParameter="{Binding }" />
                                                        <MenuItem Header="Back"
                                                                  Command="{Binding PlacementTarget.Tag.BringPreviewImageBackCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                                  CommandParameter="{Binding }" />
                                                    </MenuItem>
                                                    <MenuItem Header="Save As..."
                                                              Click="SavePreviewImageMenuItem_Click" />
                                                </ContextMenu>
                                            </Image.ContextMenu>
                                        </Image>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="2" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding DataContext.IsImageOutlined, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                        Value="True">
                                                        <Setter Property="BorderBrush" Value="Black" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding ContextMenu.IsOpen, ElementName=PreviewImage}"
                                                        Value="True">
                                                        <Setter Property="BorderBrush" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                </cc:ZoomBorder>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Viewbox>
            </Grid>
            <Grid Grid.Row="1" Margin="10,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition MaxWidth="6" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition MaxWidth="6" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                        Content="Save View"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        Click="SaveViewButton_Click" />
                <CheckBox Grid.Column="2"
                          Content="Outline Images"
                          IsChecked="{Binding IsImageOutlined}" />
                <CheckBox Grid.Column="4"
                          Content="Transparent Background"
                          IsChecked="{Binding TransparentBackground}"
                          Command="{Binding TransparentBackgroundCommand}" />
                <Button Grid.Column="6"
                        Content="View Palette"
                        Style="{StaticResource MaterialDesignFlatButton}" />
            </Grid>
        </Grid>
    </Grid>
</UserControl>