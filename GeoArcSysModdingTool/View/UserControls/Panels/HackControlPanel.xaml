<UserControl x:Class="GeoArcSysModdingTool.View.UserControls.Panels.HackControlPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:view="clr-namespace:GeoArcSysModdingTool.View"
             xmlns:conv="clr-namespace:GeoArcSysModdingTool.Converters"
             xmlns:ghmodels="clr-namespace:GHLib.Models;assembly=GHLib"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="800">
    <UserControl.Resources>
        <conv:VisToBool x:Key="BoolToVis" Inverted="True" Not="False" />
        <conv:VisToBool x:Key="NotBoolToVis" Inverted="true" Not="true" />
        <conv:DataTypeConverter x:Key="DataTypeConverter" />
        <conv:NullConverter x:Key="IsNullConverter" />
        <conv:NullConverter x:Key="IsNotNullConverter" Not="True" />
        <conv:ReverseBoolConverter x:Key="ReverseBoolConverter" />
        <DataTemplate DataType="{x:Type ghmodels:Hack}" x:Key="TemplatePicker">
            <ContentControl Content="{Binding }">
                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">

                        <Setter Property="ContentTemplate"
                                Value="{DynamicResource ScriptHeaderTemplate}" />

                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
                                        Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                        Value="{x:Type ghmodels:HackInput}" />
                                    <Condition
                                        Binding="{Binding MemType, Converter={StaticResource IsNullConverter}}"
                                        Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="ContentTemplate"
                                        Value="{DynamicResource HackExpandTemplate}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
                                        Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                        Value="{x:Type ghmodels:HackInput}" />
                                    <Condition
                                        Binding="{Binding MemType, Converter={StaticResource IsNullConverter}}"
                                        Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="ContentTemplate"
                                        Value="{DynamicResource HackInputTemplate}" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </DataTemplate>
        <DataTemplate DataType="{x:Type ghmodels:Hack}" x:Key="ScriptHeaderTemplate">
            <Expander
                HorizontalAlignment="Stretch"
                Header="{Binding Name}"
                IsExpanded="{Binding Activated}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type ghmodels:HackInput}" x:Key="HackExpandTemplate">
            <Expander
                HorizontalAlignment="Stretch"
                Header="{Binding Name}"
                Content="{Binding ChildHacks}">
                <Expander.ContentTemplate>
                    <DataTemplate DataType="{x:Type ghmodels:Hack}">
                        <ItemsControl ItemsSource="{Binding }"
                                      ItemTemplate="{StaticResource TemplatePicker}"
                                      Margin="15,0,0,0">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Vertical" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </DataTemplate>
                </Expander.ContentTemplate>
            </Expander>
        </DataTemplate>
        <DataTemplate DataType="{x:Type ghmodels:HackInput}" x:Key="HackInputTemplate">
            <Grid Margin="6,0,0,0" Focusable="True" FocusVisualStyle="{x:Null}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="{Binding Name}" VerticalAlignment="Center"
                               TextAlignment="Left" />

                    <Grid Grid.Column="2"
                          IsEnabled="{Binding Enabled}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24" />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                        <RadioButton
                            Style="{StaticResource MaterialDesignRadioButton}"
                            IsChecked="{Binding Activated, Mode=OneWay}"
                            Command="{Binding RelativeSource={
                            RelativeSource Mode=FindAncestor, AncestorLevel=2,
                            AncestorType=UserControl},
                            Path=DataContext.ToggleHackCommand}"
                            CommandParameter="{Binding }"
                            VerticalAlignment="Center"
                            Visibility="{Binding IsReadOnly, Converter={StaticResource NotBoolToVis}}" />

                        <Grid Grid.Column="1" DataContext="{Binding }">
                            <Grid.Resources>
                                <DataTemplate x:Key="TextBoxValueTemplate">
                                    <TextBox
                                        Text="{Binding Value}"
                                        IsReadOnly="{Binding IsReadOnly}"
                                        VerticalAlignment="Bottom"
                                        GotFocus="HackInput_GotFocus"
                                        KeyDown="HackInput_KeyDown"
                                        LostFocus="HackInput_LostFocus"
                                        view:TextChangedBehavior.TextChangedCommand="{Binding RelativeSource={
                                        RelativeSource Mode=FindAncestor, AncestorLevel=2,
                                        AncestorType=UserControl},
                                        Path=DataContext.HackInputTextChangeCommand}">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox"
                                                   BasedOn="{StaticResource MaterialDesignTextBox}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding Editing}"
                                                        Value="True">
                                                        <Setter Property="Foreground"
                                                                Value="#FFFF0000" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </DataTemplate>
                                <DataTemplate x:Key="ComboBoxValueTemplate">
                                    <ComboBox
                                        Text="{Binding Value}"
                                        VerticalAlignment="Bottom"
                                        DisplayMemberPath="Value"
                                        SelectedValuePath="Key"
                                        SelectedValue="{Binding Value}"
                                        IsReadOnly="{Binding IsReadOnly}"
                                        IsEditable="{Binding Dropdown.DisallowManualInput, Converter={StaticResource ReverseBoolConverter}}"
                                        ItemsSource="{Binding Dropdown.Options}"
                                        GotFocus="HackInput_GotFocus"
                                        KeyDown="HackInput_KeyDown"
                                        LostFocus="HackInput_LostFocus"
                                        DropDownClosed="HackInput_DropDownClosed"
                                        view:TextChangedBehavior.TextChangedCommand="{Binding RelativeSource={
                                        RelativeSource Mode=FindAncestor, AncestorLevel=2,
                                        AncestorType=UserControl},
                                        Path=DataContext.HackInputTextChangeCommand}">
                                        <ComboBox.Style>
                                            <Style TargetType="ComboBox"
                                                   BasedOn="{StaticResource MaterialDesignComboBox}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding Editing}"
                                                        Value="True">
                                                        <Setter Property="Foreground"
                                                                Value="#FFFF0000" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>
                                </DataTemplate>
                                <Style x:Key="InputPicker" TargetType="ContentPresenter">
                                    <Setter Property="ContentTemplate" Value="{StaticResource TextBoxValueTemplate}" />
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding Dropdown, Converter={StaticResource IsNotNullConverter}}"
                                            Value="True">
                                            <Setter Property="ContentTemplate"
                                                    Value="{StaticResource ComboBoxValueTemplate}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Resources>
                            <ContentPresenter Style="{StaticResource InputPicker}" Content="{Binding}" />
                        </Grid>
                    </Grid>
                </Grid>
                <ItemsControl Grid.Row="1" ItemsSource="{Binding ChildHacks}"
                              ItemTemplate="{StaticResource TemplatePicker}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    <Grid Background="#50000000">
        <ItemsControl ItemsSource="{Binding HackGroups}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <GroupBox
                        Header="{Binding Name}"
                        FontWeight="Bold"
                        Margin="10"
                        materialDesign:ColorZoneAssist.Mode="PrimaryDark">
                        <ItemsControl ItemsSource="{Binding Hacks}"
                                      ItemTemplate="{StaticResource TemplatePicker}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </GroupBox>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.Resources>
                <Style TargetType="Expander" BasedOn="{StaticResource MaterialDesignExpander}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="materialDesign:ExpanderAssist.DownHeaderPadding" Value="6" />
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"
                                           FontSize="13"
                                           TextWrapping="Wrap" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Resources>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Padding" Value="0" />
                        </Style>
                        <ControlTemplate x:Key="ScriptTemplate" TargetType="Expander">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <CheckBox Style="{StaticResource MaterialDesignCheckBox}"
                                          Content="{TemplateBinding Header}"
                                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsEnabled="{Binding Enabled}"
                                          Command="{Binding RelativeSource={
                                    RelativeSource Mode=FindAncestor, 
                                    AncestorLevel=2,
                                    AncestorType=UserControl},
                                    Path=DataContext.ToggleHackCommand}"
                                          CommandParameter="{Binding }"
                                          Margin="5,5"
                                          FocusVisualStyle="{x:Null}" />

                                <ContentControl
                                    x:Name="body"
                                    Grid.Row="1">
                                    <ItemsControl ItemsSource="{Binding ChildHacks}"
                                                  ItemTemplate="{StaticResource TemplatePicker}"
                                                  Margin="15,0,0,0">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Orientation="Vertical" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </ContentControl>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="False">
                                    <Setter TargetName="body" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Style.Resources>
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                            Value="{x:Type ghmodels:Hack}">
                            <Setter Property="Template"
                                    Value="{StaticResource ScriptTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Resources>
        </ItemsControl>
    </Grid>
</UserControl>