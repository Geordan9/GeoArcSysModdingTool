<UserControl x:Class="GeoArcSysModdingTool.View.UserControls.Panels.PACExplorerPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:cc="clr-namespace:GeoArcSysModdingTool.View.CustomControls"
             xmlns:panels="clr-namespace:GeoArcSysModdingTool.View.UserControls.Panels"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:viewModel="clr-namespace:GeoArcSysModdingTool.ViewModel"
             xmlns:conv="clr-namespace:GeoArcSysModdingTool.Converters"
             mc:Ignorable="d"
             Focusable="True"
             FocusVisualStyle="{x:Null}"
             d:DesignHeight="600" d:DesignWidth="800">
    <FrameworkElement.DataContext>
        <viewModel:PACExplorerViewModel />
    </FrameworkElement.DataContext>

    <UserControl.InputBindings>
        <KeyBinding Key="Backspace" Command="{Binding GoUpDirCommand}" />
    </UserControl.InputBindings>

    <Grid>
        <Grid.Resources>
            <conv:FormatKbSizeConverter x:Key="FormatKbSizeConverter" />
            <conv:NullToVisConverter x:Key="IsNotNullToVisConverter" Not="True" />
            <conv:NullToVisConverter x:Key="IsNullToVisConverter" Not="False" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="36" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" VerticalAlignment="Center" Margin="2">
            <panels:ExplorerNavBar GoUpCommand="{Binding GoUpDirCommand}" CurDirItem="{Binding CurDirItem}" />
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3" />
                <ColumnDefinition Width="160" />
                <ColumnDefinition Width="3" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="3" />
            </Grid.ColumnDefinitions>
            <panels:TreeViewExplorer Grid.Column="1"
                                     RootDirItems="{Binding RootDirItems}"
                                     UseVirtualization="True"
                                     SelectImageCommand="{Binding SelectImageCommand}"
                                     ExpandCollapseCommand="{Binding ExpandCollapseCommand}"
                                     OpenDirectoryCommand="{Binding OpenDirectoryCommand}" />
            <GridSplitter Grid.Column="2" Width="3" HorizontalAlignment="Stretch"
                          Focusable="false" />
            <Grid Grid.Column="3">
                <panels:ListBoxExplorer
                    Visibility="{Binding DataContext.PreviewImage.Item, Converter={StaticResource IsNotNullToVisConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                    CurDirItem="{Binding CurDirItem}"
                    OpenDirectoryItemCommand="{Binding OpenDirectoryItemCommand}" />
                <Grid Visibility="{Binding PreviewImage.Item, Converter={StaticResource IsNullToVisConverter}}"
                      IsVisibleChanged="ImageGrid_IsVisibleChanged">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <cc:ZoomBorder Grid.Row="0"
                                   x:Name="ZoomBorder"
                                   Background="Transparent"
                                   ClipToBounds="True"
                                   Focusable="True"
                                   FocusVisualStyle="{x:Null}"
                                   MouseDown="ZoomBorder_MouseDown"
                                   WillReset="{Binding WillResetZoomBox, Mode=TwoWay}"
                                   PreviewKeyDown="ZoomBorder_PreviewKeyDown"
                                   KeyboardNavigation.DirectionalNavigation="None"
                                   KeyboardNavigation.TabNavigation="Local">
                        <cc:ZoomBorder.InputBindings>
                            <KeyBinding Key="Left" Command="{Binding ChangeImageCommand}" CommandParameter="False" />
                            <KeyBinding Key="Right" Command="{Binding ChangeImageCommand}" CommandParameter="True" />
                            <KeyBinding Key="Up" Command="{Binding ChangePaletteCommand}" CommandParameter="0" />
                            <KeyBinding Key="Down" Command="{Binding ChangePaletteCommand}" CommandParameter="1" />
                            <KeyBinding Modifiers="Shift" Key="Up" Command="{Binding ChangePaletteCommand}"
                                        CommandParameter="2" />
                            <KeyBinding Modifiers="Shift" Key="Down" Command="{Binding ChangePaletteCommand}"
                                        CommandParameter="3" />
                        </cc:ZoomBorder.InputBindings>
                        <Viewbox Stretch="Uniform">
                            <Canvas HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    UseLayoutRounding="True"
                                    Width="{Binding PreviewImage.CanvasWidth}"
                                    Height="{Binding PreviewImage.CanvasHeight}">
                                <Canvas.RenderTransform>
                                    <ScaleTransform />
                                </Canvas.RenderTransform>
                                <Image x:Name="PreviewImage"
                                       Tag="{Binding PreviewImage.Path}"
                                       Canvas.Left="{Binding PreviewImage.OffsetX}"
                                       Canvas.Top="{Binding PreviewImage.OffsetY}"
                                       Width="{Binding PreviewImage.ImageWidth}"
                                       Height="{Binding PreviewImage.ImageHeight}"
                                       Focusable="True"
                                       FocusVisualStyle="{x:Null}"
                                       HorizontalAlignment="Stretch" RenderOptions.BitmapScalingMode="NearestNeighbor"
                                       RenderOptions.EdgeMode="Aliased"
                                       Source="{Binding PreviewImage.Source}">
                                    <Image.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Save As..." Click="SavePreviewImage_Click" />
                                            <MenuItem Header="Save Palette As..." Click="SavePreviewImagePalette_Click">
                                                <MenuItem.Style>
                                                    <Style TargetType="MenuItem"
                                                           BasedOn="{StaticResource {x:Type MenuItem}}">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                        <Setter Property="Padding" Value="12,0,12,0" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition
                                                                        Binding="{Binding PreviewImage.HasPalette}"
                                                                        Value="True" />
                                                                    <Condition
                                                                        Binding="{Binding PreviewImage.MissingPalette}"
                                                                        Value="False" />
                                                                </MultiDataTrigger.Conditions>
                                                                <MultiDataTrigger.Setters>
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </MultiDataTrigger.Setters>
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </MenuItem.Style>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Image.ContextMenu>
                                </Image>
                            </Canvas>
                        </Viewbox>
                    </cc:ZoomBorder>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0"
                                   TextWrapping="WrapWithOverflow"
                                   Text="{Binding PreviewImage.Path}"
                                   Style="{StaticResource MaterialDesignSubtitle2TextBlock}" />

                        <TextBlock Grid.Column="2"
                                   TextWrapping="WrapWithOverflow"
                                   Text="{Binding PreviewImage.FileSize, Converter={StaticResource FormatKbSizeConverter}}"
                                   Style="{StaticResource MaterialDesignSubtitle2TextBlock}" />
                    </Grid>
                    <Grid Grid.Row="2"
                          Visibility="{Binding PreviewImage.HasPalette, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0"
                                       VerticalAlignment="Center"
                                       TextWrapping="WrapWithOverflow">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}"
                                           BasedOn="{StaticResource MaterialDesignSubtitle2TextBlock}">
                                        <Setter Property="Text"
                                                Value="{Binding PreviewImage.PalettePath, StringFormat={}Palette: {0}}" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding PreviewImage.PalettePath}"
                                                               Value="{x:Null}" />
                                                    <Condition Binding="{Binding PreviewImage.MissingPalette}"
                                                               Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Text" Value="Palette: Embedded" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding PreviewImage.PalettePath}"
                                                               Value="{x:Null}" />
                                                    <Condition Binding="{Binding PreviewImage.MissingPalette}"
                                                               Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Text" Value="Palette: Missing" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <Button Grid.Column="2"
                                    Margin="4"
                                    Content="Import Palette"
                                    Style="{StaticResource MaterialDesignFlatAccentButton}"
                                    Click="ImportPalButton_Click" />
                        </Grid>
                        <Grid Grid.Row="1" Margin="2,6">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="1"
                                      Content="Transparent Background"
                                      IsChecked="{Binding TransparentBackground}"
                                      Command="{Binding TransparentBackgroundCommand}" />
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>